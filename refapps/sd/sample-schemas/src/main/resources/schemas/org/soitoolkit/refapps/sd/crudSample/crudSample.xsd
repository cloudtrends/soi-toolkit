<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema
	targetNamespace="urn:org.soitoolkit.refapps.sd.crudsample.schema:v1"
	xmlns:tns="urn:org.soitoolkit.refapps.sd.crudsample.schema:v1" 
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	elementFormDefault="qualified" 
	version="1.0">

    <!-- 
      Entity definition
      -->
    <xsd:element name="sampleEntity">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:string"/>
                <xsd:element name="value" type="xsd:string"/>
                
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>


    <!-- 
      CREATE
      -->
    <xsd:element name="createSample">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="value" type="xsd:string"/>
    
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="createSampleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:string"/>
                
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>


    <!-- 
      FIND
      -->
    <xsd:element name="findSamples">
        <xsd:complexType>
            <xsd:sequence>
    
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="findSamplesResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element ref="tns:sampleEntity" minOccurs="0" maxOccurs="unbounded" />
                
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>


    <!-- 
      GET
      -->
    <xsd:element name="getSample">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:string"/>
    
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="getSampleResponse">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="value" type="xsd:string"/>
                
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>


    <!-- 
      UPDATE
      -->
    <xsd:element name="updateSample">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:string"/>
                <xsd:element name="value" type="xsd:string"/>
    
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="updateSampleResponse">
        <xsd:complexType>
            <xsd:sequence>
                
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>


    <!-- 
      DELETE
      -->
    <xsd:element name="deleteSample">
        <xsd:complexType>
            <xsd:sequence>
                <xsd:element name="id" type="xsd:string"/>
    
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded" />
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>
    
    <xsd:element name="deleteSampleResponse">
        <xsd:complexType>
            <xsd:sequence>
                
                <xsd:any namespace="##other" processContents="lax" minOccurs="0" maxOccurs="unbounded"/>
            </xsd:sequence>
        </xsd:complexType>
    </xsd:element>


    <!-- 
      FAULT INFO
      -->

	<xsd:element name="faultInfo">
		<xsd:complexType>
			<xsd:sequence>
				<xsd:element name="faultId" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>
							Used for tracing faults across systems.
							faultId is a unique fault instance identifier (for example a UUID)
							generated by the service provider where the fault occured
							(faultOriginatingSource).
							The service provider SHOULD write the faultId to log together with
							a fault description.
							The service consumer SHOULD also write the faultId to log.
						</xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="faultOriginatingSource" type="xsd:string">
					<xsd:annotation>
						<xsd:documentation>
							Used for tracing faults across systems.
							faultOriginatingSource is the name of the service provider where
							the fault occured.
          </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="code" type="xsd:int">
					<xsd:annotation>
						<xsd:documentation>
							Used to communicate the reason for a fault.
							code represents the fault category.
							code is intended for programmatic use.
          </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="message" type="xsd:string" minOccurs="0">
					<xsd:annotation>
						<xsd:documentation>
							Used to communicate the reason for a fault.
							message is a free-text field where a rich description of the fault
							can be provided.
							message is NOT intended for programmatic use.
          </xsd:documentation>
					</xsd:annotation>
				</xsd:element>
				<xsd:element name="details" minOccurs="0" maxOccurs="unbounded">
					<xsd:complexType>
						<xsd:sequence>
							<xsd:element name="name" type="xsd:string" />
							<xsd:element name="value" type="xsd:string" />
						</xsd:sequence>
					</xsd:complexType>
				</xsd:element>

				<xsd:any namespace="##other" processContents="lax"
					minOccurs="0" maxOccurs="unbounded" />
			</xsd:sequence>
		</xsd:complexType>
	</xsd:element>
    
</xsd:schema>
