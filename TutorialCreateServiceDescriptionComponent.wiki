#summary Tutorial on how to create a Service Description Component

=Introduction=

Service Description components are used to contain wsdl and xml schema files that describe message formats for xml based services.

This tutorial helps you to create your first service description component.

*NOTE*: Prerequisites for this tutorial is that the [InstallationGuide installation guide] is completed.

=Create a new Service Description Component=
 * Select the menu "File --> New --> Other" and expand the wizard "SOI Toolkit Code Generator"
 * Select the code generator "Create a new component"

 http://soi-toolkit.googlecode.com/svn/wiki/Tutorials/TutorialCreateServiceDescriptionComponent/TutorialCreateServiceDescriptionComponent1.png

 * Click on the "Next >" button
 * The wizard "SOI Toolkit - Create a new Component" opens up
  * Select the component type "Service Description Component" in the radio button control named "Type of component"
  * Specify a proper name of the component in the field "Artifact Id"
  * Specify a proper group name in the field "Group Id"
  Note: The group name will be used for naming both java packages and xml schema namespaces.
  * Select where you want the files to be created in the field "Root folder"
  Note: The preselected folder is picked up from the preference page you filled in during the installation of the soi-toolkit plugin.

 http://soi-toolkit.googlecode.com/svn/wiki/Tutorials/TutorialCreateServiceDescriptionComponent/TutorialCreateServiceDescriptionComponent2.png

 * Click on the "Finish" button
  * The wizard now starts to execute and logs its output to a text area.

 http://soi-toolkit.googlecode.com/svn/wiki/Tutorials/TutorialCreateServiceDescriptionComponent/TutorialCreateServiceDescriptionComponent3.png

 * The following work is performed by the wizard:
  * Creates folders and files according to the input on the previous page.
  * Launch maven to do a initial build and also create eclipse files
  * Opens the project in the current Eclipse workspace

 * When the wizard is done you can find your new service description component in the Eclipse Package Explorer

 http://soi-toolkit.googlecode.com/svn/wiki/Tutorials/TutorialCreateServiceDescriptionComponent/TutorialCreateServiceDescriptionComponent4.png

 * Files of interest:
  * Source folder {{{src/main/resources}}}
  Skeleton wsdl and xml schema files ({{{mySampleSchema.wsdl}}} and {{{mySample.xsd}}}) are created with some default method and some request and reply elements for you to fill in :-)
  * Source folder {{{target/generated-sources/cxf}}}
  Generated jax-ws and jaxb Java classes according to the wsdl and xml schema.
  These files are automatically created by maven when it builds the component. 
  * Target folder {{{target}}}
  The runtime files for this component:
   * {{{mySample-schemas-1.0-SNAPSHOT.jar}}} contains the wsdl and xml schema files and the class files for the corresponding generated java source files, typically used by Java based consumers and providers of these service descriptions.
   * {{{mySample-schemas-1.0-SNAPSHOT-schemas.zip}}} contains only the wsdl and xml schema files, typically used by non Java based consumers and providers of these service descriptions, such as Microsoft .Net based consumers and providers of these service descriptions.

 * In the filesystem the following folder structure is created for you under the selected root folder:

 http://soi-toolkit.googlecode.com/svn/wiki/Tutorials/TutorialCreateServiceDescriptionComponent/TutorialCreateServiceDescriptionComponent5.png

 * After updating the wsdl and/or the xml schemas you can create new Java files and runtime files by opening a command window in the projects {{{trunk}}}-folder and enter the command 
 {{{mvn clean install}}}.
 
 If everything goes well the build ends with a {{{BUILD SUCCESSFUL}}} - message

 http://soi-toolkit.googlecode.com/svn/wiki/Tutorials/TutorialCreateServiceDescriptionComponent/TutorialCreateServiceDescriptionComponent6.png