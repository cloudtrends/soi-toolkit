<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>5</version>
    </parent>

  <!--
    This is the default parent-pom for integration components based on
    soi-toolkit.
    There is no parent to this pom since it should be standalone and only force
    a minimum set of constraints on integration components.
  -->
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.soitoolkit.commons.poms</groupId>
  <artifactId>soitoolkit-default-parent</artifactId>
  <packaging>pom</packaging>
  <version>0.1.8-SNAPSHOT</version>
  <name>soitoolkit-default-parent</name>
  <description>The default parent pom for components that use soi-toolkit, e.g. integration and schema components</description>
  <url>http://soi-toolkit.org</url>
  <licenses>
    <license>
      <name>The Apache Software License, Version 2.0</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
      <distribution>repo</distribution>
    </license>
  </licenses>

  	<properties>
		<!-- WARNING: Using ${project.version} will not work here, 
		     an integration component that refer to soitoolkit.version will get it translated 
			 to its own project-version and not soi-toolkits. 
			 So we have to specify the soitoolkit-version twice! 
		-->
		<soitoolkit.version>0.1.7</soitoolkit.version>
	</properties>
	
	<repositories>
<!--
		<!- - for jaxb-impl - ->
		<repository>
			<id>maven-repository.dev.java.net</id>
			<url>http://download.java.net/maven/1/</url>
			<layout>legacy</layout>
		</repository>
-->
		<!-- for jersey-server -->
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
		<!-- for mule-addons such as jersey and restlet transports -->
		<repository>
			<id>muleforge</id>
			<name>MuleForge Repository</name>
			<url>http://repository.muleforge.org</url>
		</repository>
	</repositories>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <!--
            Note: version 2.0 is tagging at the wrong level in SVN
            (project level instead of trunk-level) due to bug:
            http://jira.codehaus.org/browse/MRELEASE-526

            <version>2.0</version>
          -->
          <version>2.0-beta-9</version>
        </plugin>
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.2-beta-5</version>
        </plugin>
        <plugin>
          <!-- CXF plugin for generating JAX-WS/JAXB src code from WSDL/XSD -->
          <groupId>org.apache.cxf</groupId>
          <artifactId>cxf-codegen-plugin</artifactId>
          <version>2.1.9</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-eclipse-plugin</artifactId>
          <!-- eclipse-plugin 2.8 has removed(!) the goal eclipse:m2eclipse -->
          <version>2.7</version>
        </plugin>
      </plugins>
    </pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

			<!-- ensure that source jar files are created and installed as well -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

            <!-- create test-jar as well -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!--
				download source jar's for our dependencies whenever possible, but
				skip javadoc-jar's
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<downloadSources>true</downloadSources>
					<downloadJavadocs>false</downloadJavadocs>
				</configuration>
			</plugin>

            <!-- Creates a property file that can be used at runtime, e.g. by a monitor-service to provide build-info, see build-properties in the top of this file -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>1.0-alpha-2</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>write-project-properties</goal>
                        </goals>
                        <configuration>
                            <outputFile>
                                ${project.build.outputDirectory}/${artifactId}-build.properties
                            </outputFile>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <configuration>
                    <autoVersionSubmodules>true</autoVersionSubmodules>
                </configuration>
            </plugin>    
            
		</plugins>
	</build>
</project>