<?xml version="1.0" encoding="utf-8"?>

<mule 
	xmlns="http://www.mulesource.org/schema/mule/core/2.2"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:spring="http://www.springframework.org/schema/beans"
<% if (servlet) { %>
	xmlns:servlet="http://www.mulesource.org/schema/mule/servlet/2.2"
<% } %>  
	xmlns:management="http://www.mulesource.org/schema/mule/management/2.2"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans          http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.mulesource.org/schema/mule/core/2.2       http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
<% if (servlet) { %>
		http://www.mulesource.org/schema/mule/servlet/2.2    http://www.mulesource.org/schema/mule/servlet/2.2/mule-servlet.xsd
<% } %>  
		http://www.mulesource.org/schema/mule/management/2.2 http://www.mulesource.org/schema/mule/management/2.2/mule-management.xsd
	">

	<spring:bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<spring:property name="ignoreResourceNotFound" value="true" />
		<spring:property name="locations">
			<spring:list>
				<!-- Only available in development env, e.g. Eclipse -->
				<spring:value>classpath:${artifactId}.properties</spring:value>
				
				<!-- Only available when deployed to a servlet container -->
				<spring:value>file:${dollarSymbol}{app.home}/${artifactId}/config/${artifactId}.properties</spring:value>
			</spring:list>
		</spring:property>
	</spring:bean>

<!-- 
    <management:jmx-default-config port="${dollarSymbol}{JMX_PORT}" registerMx4jAdapter="false" >
        <management:credentials>
            <spring:entry key="${dollarSymbol}{JMX_USER}" value="${dollarSymbol}{JMX_PWD}"/>
        </management:credentials>
    </management:jmx-default-config> 
 -->
    
	<!--  Allow tests to register dynamic listeners by specifying dynamic="true" -->
	<!-- TODO: Is there a performance hit with this that is not acceptable in runtime?
	           Then we maybe need a teststub-common-xml file in the end... -->
   	<notifications dynamic="true">
		<notification event="COMPONENT-MESSAGE"/>
		<notification event="ENDPOINT-MESSAGE"/>
	</notifications>

<% if (servlet) { %>
	<servlet:connector name="servletConnector" />
<% } %>  

	<custom-transformer name="objToStr" class="org.soitoolkit.commons.mule.core.ObjectToStringTransformer"/>

	<custom-transformer name="createCorrId"  class="org.soitoolkit.commons.mule.log.correlationid.CreateCorrelationIdTransformer" />
	<custom-transformer name="saveCorrId"    class="org.soitoolkit.commons.mule.log.correlationid.SaveCorrelationIdTransformer" />
	<custom-transformer name="restoreCorrId" class="org.soitoolkit.commons.mule.log.correlationid.RestoreCorrelationIdTransformer" />

	<custom-transformer name="objToXml" class="org.soitoolkit.commons.mule.jaxb.JaxbObjectToXmlTransformer">
		<spring:property name="contextPath"  value="
			"/>
	</custom-transformer>

	<custom-transformer name="xmlToObj" class="org.soitoolkit.commons.mule.jaxb.XmlToJaxbObjectTransformer">
		<spring:property name="contextPath"  value="
			"/>
	</custom-transformer>

    <custom-transformer name="logMsgIn" class="org.soitoolkit.commons.mule.log.LogTransformer">
		<spring:property name="logType"  value="msg-in"/>
		<spring:property name="jaxbObjectToXml"  ref="objToXml"/>
    </custom-transformer>

    <custom-transformer name="logMsgOut" class="org.soitoolkit.commons.mule.log.LogTransformer">
		<spring:property name="logType"  value="msg-out"/>
		<spring:property name="jaxbObjectToXml"  ref="objToXml"/>
    </custom-transformer>

    <custom-transformer name="logReqIn" class="org.soitoolkit.commons.mule.log.LogTransformer">
		<spring:property name="logType"  value="req-in"/>
		<spring:property name="jaxbObjectToXml"  ref="objToXml"/>
    </custom-transformer>

    <custom-transformer name="logReqOut" class="org.soitoolkit.commons.mule.log.LogTransformer">
		<spring:property name="logType"  value="req-out"/>
		<spring:property name="jaxbObjectToXml"  ref="objToXml"/>
    </custom-transformer>

    <custom-transformer name="logRespIn" class="org.soitoolkit.commons.mule.log.LogTransformer">
		<spring:property name="logType"  value="resp-in"/>
		<spring:property name="jaxbObjectToXml"  ref="objToXml"/>
    </custom-transformer>

    <custom-transformer name="logRespOut" class="org.soitoolkit.commons.mule.log.LogTransformer">
		<spring:property name="logType"  value="resp-out"/>
		<spring:property name="jaxbObjectToXml"  ref="objToXml"/>
    </custom-transformer>
  
    <!-- TODO: Add global definitions here -->

</mule>