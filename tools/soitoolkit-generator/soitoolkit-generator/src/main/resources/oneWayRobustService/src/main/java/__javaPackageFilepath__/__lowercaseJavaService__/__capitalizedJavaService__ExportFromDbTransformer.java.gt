package ${javaPackage}.${lowercaseJavaService};

import java.util.Map;
import java.util.Map.Entry;

import org.mule.api.transformer.TransformerException;
import org.mule.transformer.AbstractTransformer;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class ${capitalizedJavaService}ExportFromDbTransformer extends AbstractTransformer {

	private static final Logger log = LoggerFactory.getLogger(${capitalizedJavaService}ExportFromDbTransformer.class);
	
    public ${capitalizedJavaService}ExportFromDbTransformer() {
        super();
        this.registerSourceType(Map.class);
        setReturnClass(String.class);
    }

    /**
	 * Simplest possible transformer that ...
	 */
	@Override
    @SuppressWarnings("unchecked")
	protected Object doTransform(Object src, String encoding) throws TransformerException {

        String id = null;
        String value = null;
        Map<String, String> map = (Map<String, String>)src;
        id = map.get("ID");
        value = map.get("VALUE");

        String o = id + "=" + value;
        if (logger.isDebugEnabled()) log.debug("doTransform(" + src.getClass().getSimpleName() + ", " + encoding + ") returns: " +  o);
        return o;
	}
}