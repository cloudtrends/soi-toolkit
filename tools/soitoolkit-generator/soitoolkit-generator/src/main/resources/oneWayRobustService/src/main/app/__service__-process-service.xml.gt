<?xml version="1.0" encoding="utf-8"?>

<mule 
${xmlNamespace.onewayService}
  <!-- TODO: Add service specific definitions here -->
  
<% if (transformerType=="EE_DATAMAPPER") { %>
  <!-- Example DataMapper-config:  
  <data-mapper:config name="mapping1_grf" transformationGraphPath="mapping1.grf"
      doc:name="mapping1_grf"></data-mapper:config>
  -->
<% } %>
  
  <flow name="${service}-process-service" doc:name="${service}-process-service">
    <jms:inbound-endpoint connector-ref="${jmsInboundConnector}"
        queue="${dollarSymbol}{${uppercaseService}_IN_QUEUE}"
        transformer-refs="logMsgIn" doc:name="JMS in">
      <jms:transaction action="ALWAYS_BEGIN"/>
    </jms:inbound-endpoint>
    
    <expression-component doc:name="Propagate correlation Id to outbound">
        message.outboundProperties[org.soitoolkit.commons.mule.core.PropertyNames.SOITOOLKIT_CORRELATION_ID] =
            message.inboundProperties[org.soitoolkit.commons.mule.core.PropertyNames.SOITOOLKIT_CORRELATION_ID]
    </expression-component>
    <!-- propagate originalFilename to outbound-->
    <expression-component doc:name="Propagate filename">
        message.outboundProperties[org.mule.transport.file.FileConnector.PROPERTY_ORIGINAL_FILENAME] =
            message.inboundProperties[org.mule.transport.file.FileConnector.PROPERTY_ORIGINAL_FILENAME]
    </expression-component>
    
    <file:outbound-endpoint
        path="${dollarSymbol}{${uppercaseService}_ARCHIVE_FOLDER}"
        outputPattern="${dollarSymbol}{${uppercaseService}_ARCHIVE_FILENAME_INBOUND}" doc:name="Archive inbound file"/>
    
    <!-- BEGIN TRANSFORMATION -->

<% if (transformerType=="EE_DATAMAPPER") { %>
    <!-- Example DataMapper-config:
    <data-mapper:transform config-ref="mapping1_grf" doc:name="DataMapper"></data-mapper:transform>
    -->
    <logger doc:name="### DATAMAPPER PLACEHOLDER - DROP IN AND REPLACE ME! ###" message="DATAMAPPER PLACEHOLDER" level="DEBUG"/>
<% } else { %>
    <!--
    Note: declare encoding explicitly for in/out here (if String conversion is needed).
    All other parts of the flow (where payload is not being transformed) should handle
    payload in a binary format to avoid encoding issues.
    -->
    <byte-array-to-string-transformer encoding="ISO-8859-1" doc:name="Byte Array to String"/>

    <custom-transformer doc:name="Transform message"
        class="${javaPackage}.${lowercaseJavaService}.process.${capitalizedJavaService}Transformer"/>
        
    <string-to-byte-array-transformer encoding="ISO-8859-1" doc:name="String to Byte Array"/>
<% } %>
    <!-- END TRANSFORMATION -->

    <file:outbound-endpoint
        path="${dollarSymbol}{${uppercaseService}_ARCHIVE_FOLDER}"
        outputPattern="${dollarSymbol}{${uppercaseService}_ARCHIVE_FILENAME_OUTBOUND}" doc:name="Archive outbound file"/>
        
    
    <jms:outbound-endpoint connector-ref="${jmsOutboundConnector}"
        queue="${dollarSymbol}{${uppercaseService}_OUT_QUEUE}"
        transformer-refs="logMsgOut" doc:name="JMS out">
      <jms:transaction action="ALWAYS_JOIN"/>
    </jms:outbound-endpoint>
    

    <custom-exception-strategy class="org.soitoolkit.commons.mule.error.ServiceExceptionStrategy"/>
    
  </flow>

</mule>