#summary Guidelines for developers of the soi-toolkit
#labels Phase-Implementation

Content

<wiki:toc max_depth="2" />

= Introduction =

Guidelines for developers of the soi-toolkit...

soi-toolkit is based on the following components:
|| *Name* || *Svn-path* || *Description* ||
|| superpom || commons/poms/superpom/trunk || TBS ||
|| commons-schemas || commons/components/commons-schemas/trunk || TBS ||
|| commons-log || commons/components/commons-log/trunk || TBS ||
|| commons-mule || commons/components/commons-mule/trunk || TBS ||

= Initial setup =

The soi-toolkit uses Sonatype OSS Maven Repository to release artifacts to the Maven central repository, see https://docs.sonatype.org/display/repository/sonatype+oss+maven+repository+usage+guide for details.

Added to the setup of the development environment required for a user of soi-toolkit a developer must perform the following setup steps to be able to perform releases of soi-toolkit:

 # Create an JIRA account at Sonatype, https://issues.sonatype.org/
{{{
firefox https://issues.sonatype.org/
}}}
 # Add the following servers to the maven settings.xml - file:
{{{
  <servers>
    <server>
      <id>sonatype-nexus-snapshots</id>
      <username>your-jira-id</username>
      <password>your-jira-pwd</password>
    </server>
    <server>
      <id>sonatype-nexus-staging</id>
      <username>your-jira-id</username>
      <password>your-jira-pwd</password>
    </server>
  </servers>
}}}
 # Install pgp, create key-pair and distribute public key.
 See http://www.sonatype.com/people/2010/01/how-to-generate-pgp-signatures-with-maven/ for details.
  * Install pgp
  If you are a Mac user and have macports installed (you really should!) then simply install pgp with the command:
{{{
sudo port install gnupg
}}}
  * Create key-pair
{{{
gpg --gen-key
}}}
  * List keys
{{{
gpg --list-keys
gpg --list-secret-keys
}}}
  * Distribute public key
{{{
gpg --keyserver hkp://pgp.mit.edu --send-keys nnnnnnnn
}}}
 
= Publish snapshots =

To publish a snapshot of a soi-toolkit component do:
{{{
mvn clean deploy
}}}

= Release handling =

Each component mentioned above has its own release cycle and are released as described below.


To release components of soi-toolkit we use mavens release-plugin.

Perform the following steps

 # Go to the components trunk-folder
{{{
cd .../trunk
}}}
 # Check that the code is in synch
  * Check for updates:
{{{
svn update
}}}
  * Run tests
{{{
mvn clean test
}}}
 # Manually update the soi-toolkit version to the release version in {{{commons/poms/superpom/pom.xml}}}. 
 E.g. change:
{{{
<soitoolkit.version>0.1.2-SNAPSHOT</soitoolkit.version>
}}}
 To:
{{{
<soitoolkit.version>0.1.2</soitoolkit.version>
}}}
 # Check versions of dependencies and parent pom, replace any SNAPSHOT-versions with stable ones. 
{{{
mate pom.xml
}}}
 # Commit changes
{{{
svn commit
}}}
 # Perform a dryrun to verify that everything is ok, i.e. a release build will be successful and not fail in the middle leaving the release build in an inconsistent state. *Note:* Version numbers shall follow the format defined below.
{{{
mvn release:clean release:prepare -DdryRun=true -Darguments=-Dgpg.passphrase=nnn
}}}
 # Fix any problems identified by the dryrun then perform a prepare-step to create the tag in svn
{{{
mvn release:clean release:prepare -Darguments=-Dgpg.passphrase=nnn
}}}
 # Deploy to Sonatypes staging repository
{{{
mvn release:perform
}}}
 # Go to Sonatypes staging repository and release it to synch with maven central repo
  * Go to: https://oss.sonatype.org
  * Login to the Nexus UI.
  * Go to Staging Repositories page.
  * Select a staging repository.
  * Click the Close button.
  * If errors then Click on the Drop button and correct error and redo the process...
  * If ok click on the Release button.
  * Artifacts should now be synched with central repo on a hourly bases... 
 # Manually update the soi-toolkit version to snapshot of the next release version in {{{trunk/commons/poms/superpom/pom.xml}}}. 
 E.g. change:
{{{
<soitoolkit.version>0.1.2</soitoolkit.version>
}}}
 To:
{{{
<soitoolkit.version>0.1.3-SNAPSHOT</soitoolkit.version>
}}}
 # Commit the change
{{{
svn commit
}}}

= Naming Conventions =

Version numbers of components:
 * {{{n.n.n}}} for released components
 * {{{REL-n.n.n}}} for svn tags for released components
 * {{{n.n.n-SNAPSHOT}}} for unreleased components during development